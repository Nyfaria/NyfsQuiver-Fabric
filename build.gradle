plugins {
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'maven-publish'
    id "me.modmuss50.mod-publish-plugin" version "0.3.3"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.minecraft_version + "-fabric-" + project.mod_version
group = project.maven_group


repositories {
    maven {
        name = 'Ladysnake Mods'
        url = 'https://maven.ladysnake.org/releases'
    }

    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/"
    }
    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven { url "https://maven.misterpemodder.com/libs-release/" }
    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://jitpack.io" }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-1.20.1:2023.07.09@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // config
    //modImplementation 'com.github.Draylar.omega-config:omega-config-base:1.0.4-beta'
    //include 'com.github.Draylar.omega-config:omega-config-base:1.0.8-1.17'

    // trinkets
    modImplementation("curse.maven:trinkets-${project.trinkets_version}")
    modImplementation include("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}")
    modImplementation include("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cca_version}")
    //Gate of Babylon
    //modCompileOnly("curse.maven:gate-of-babylon-407500:3352501")

}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}
publishMods {
    file = remapJar.archiveFile
    changelog = file("changelog.md").text
    type = STABLE
    modLoaders.add("fabric")
    displayName = "${archives_base_name}-${minecraft_version}-fabric-${mod_version}"
    if(curseforge_publishing_enabled.toBoolean()) {
        curseforge {
            projectId = curseforge_project_id
            accessToken = curseforge_token
            minecraftVersions.add(minecraft_version)
            requires {
                slug = "trinkets"
            }
        }
    }

    if (modrinth_publishing_enabled.toBoolean()) {
        modrinth {
            accessToken = modrinth_token
            projectId = modrinth_project_id
            minecraftVersions.add(minecraft_version)
            requires {
                slug = "trinkets"
            }
        }
    }

}

